AC_INIT(include/ptlib.h)

dnl ########################################################################
dnl set te PWLIB directory to the current directory

AC_SUBST(PWLIBDIR, `pwd`)

dnl ########################################################################
dnl set the OSTYPE and MACHTYPE

AC_CANONICAL_TARGET()

OSTYPE=

case "$target_os" in
  linux\-gnu)          OSTYPE=linux ;  
                   OSRELEASE=`uname -r` ;
                   STDCCFLAGS="-DP_LINUX=$OSRELEASE" ;;

  freebsd)         OSTYPE=FreeBSD ;
                   OSRELEASE=`sysctl -n kern.osreldate` ;
                   STDCCFLAGS="-DP_FREEBSD=$OSRELEASE" ;;

  openbsd)         OSTYPE=OpenBSD ;
                   OSRELEASE=`sysctl -n kern.osrevision` ;
                   STDCCFLAGS="$STDCCFLAGS -DP_OPENBSD=$OSRELEASE" ;;

  netbsd)          OSTYPE=NetBSD ;
                   STDCCFLAGS="$STDCCFLAGS -DP_NETBSD" ;;

  solaris2 | sunos ) OSTYPE=solaris ;
		   OSRELEASE="5.$OSVER" ;
                   STDCCFLAGS="-DP_SOLARIS=$OSRELEASE" ;;

  darwin* )	   OSTYPE=Darwin ;
		   OSRELEASE='$(subst .,,$(shell uname -r))' ;
                   STDCCFLAGS='-DP_MACOSX=$(OSRELEASE) -DNO_LONG_DOUBLE' ;
                   SHAREDLIBEXT="dylib";;

  * )		   OSTYPE="$target_os" ;
  		   OSRELEASE=`uname -r` ;
                   STDCCFLAGS="-DP_UNKNOWN=$OSTYPE_$OSRELEASE" ;
		   echo "OS $target_os not recognized - proceed with caution!" ;;
esac

MACHTYPE=

case "$target_cpu" in
   x86 | i686 | i586 | i486 | i386 ) MACHTYPE=x86 ;;

   x86_64)	   MACHTYPE=x86_64 ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   alpha | alphaev56) MACHTYPE=alpha ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   sparc )         MACHTYPE=sparc ;;

   powerpc )       MACHTYPE=ppc ;;

   ia64)	   MACHTYPE=ia64 ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   s390x)	   MACHTYPE=s390x ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   * )		   MACHTYPE=$target_cpu ;
		   echo "CPU $target_cpu not recognized - proceed with caution!" ;;
esac

AC_SUBST(MACHTYPE,  $MACHTYPE)
AC_SUBST(OSTYPE,    $OSTYPE)
AC_SUBST(OSRELEASE, $OSRELEASE)

dnl ########################################################################
dnl set the shared library extension, if not already set

if test "x${SHAREDLIBEXT}" = "x" ; then
  SHAREDLIBEXT="so"
fi
AC_SUBST(SHAREDLIBEXT, $SHAREDLIBEXT)
AC_DEFINE(P_SHAREDLIBEXT, $SHAREDLIBEXT, "shared library extension")

dnl ########################################################################
dnl check the endianness

dnl MSWIN Byte Order,PBYTE_ORDER,PLITTLE_ENDIAN

AC_C_BIGENDIAN()
if test ${ac_cv_c_bigendian} = yes ; then
  PBYTE_ORDER=PBIG_ENDIAN
else
  PBYTE_ORDER=PLITTLE_ENDIAN
fi

AC_DEFINE_UNQUOTED(PBYTE_ORDER, $PBYTE_ORDER)


dnl ########################################################################
dnl look for DNS resolver code (must be done before OpenLDAP)

dnl MSWIN DNS Resolver,P_DNS,1,@DNS_DIR@,include\windns.h,,\Program Files\Microsoft SDK\

LIBS=""
AC_SEARCH_LIBS(res_search, resolv, HAVE_RESOLVER=$LIBS)
if test "u${HAVE_RESOLVER:-nset}" != "unset" ; then
  AC_DEFINE(P_DNS, 1, "resolver libraries found")
fi

dnl ########################################################################
dnl look for OpenLDAP

dnl MSWIN Open LDAP,P_LDAP,1,@LDAP_DIR@,include\ldap.h,OpenLDAP,..\openldap\

if test "u${HAVE_RESOLVER:-nset}" != "unset" ; then
  AC_CHECK_HEADERS(ldap.h, HAS_OPENLDAP=1)
  if test "${HAVE_OPENLDAP:-unset}" = "unset" ; then
    AC_CHECK_LIB(ldap, ldap_open, HAVE_LIBOPENLDAP=1, HAVE_LIBOPENLDAP=,-llber $HAVE_RESOLVER)
  else
    AC_CHECK_FILE(/usr/local/include/ldap.h, HAS_OPENLDAP=1)
    if test "${HAVE_LIBOPENLDAP:-unset}" != "unset" ; then
      OPENLDAPINCLUDEDIR=/usr/local/include
      OPENLDAPLIBDIR=/usr/local/lib
    fi
  fi
fi

if test "${HAVE_LIBOPENLDAP:-unset}" != "unset" ; then
  AC_SUBST(HAS_OPENLDAP, 1)
  AC_DEFINE(P_LDAP, 1, "OpenLDAP found")
  if test ${OPENLDAPINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${OPENLDAPINCLUDEDIR}"
  fi
  if test ${OPENLDAPLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$LDFLAGS -L${OPENLDAPLIBDIR}"
  fi
  ENDLDLIBS="$ENDLDLIBS -llber -lldap -lldap_r"
fi


dnl ########################################################################
dnl look for OpenSSL
dnl check for environment vcariable, then assume standard system install

dnl MSWIN Open SSL,P_SSL,1,@SSL_DIR@,inc32\openssl\ssl.h,,..\openssl\

if test ${OPENSSLDIR:-unset} != "unset" ; then
  echo "Using ${OPENSSLDIR} for SSL"
  HAVE_LIBSSL=1
  SSLINCLUDEDIR="${OPENSSLDIR}/include"
  SSLLIBDIR="${OPENSSLDIR}/lib"
else 
  AC_CHECK_LIB(ssl, SSL_new, HAVE_LIBSSL=1)
fi

if test "${HAVE_LIBSSL:-unset}" != "unset" ; then
  AC_SUBST(HAS_OPENSSL, 1)
  AC_DEFINE(P_SSL, 1, "OpenSSL found")
  if test ${SSLINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${SSLINCLUDEDIR}"
  fi
  if test ${SSLLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$STDCCFLAGS -L${SSLLIBDIR}"
  fi
  ENDLDLIBS="$ENDLDLIBS -lssl -lcrypto"
fi

dnl ########################################################################
dnl look for expat XML parser

dnl MSWIN Expat XML,P_EXPAT,1,@EXPAT_DIR@,lib\expat.h,,..\expat\

AC_CHECK_HEADERS(expat.h, HAS_EXPAT=1)
if test "${HAVE_EXPAT:-unset}" = "unset" ; then
  AC_CHECK_LIB(expat, XML_ParserCreate, HAVE_LIBEXPAT=1, HAVE_LIBEXPAT=)
else
  AC_CHECK_FILE(/usr/local/include/expat.h, HAS_EXPAT=1)
  if test "${HAVE_LIBEXPAT:-unset}" != "unset" ; then
    EXPATINCLUDEDIR=/usr/local/include
    EXPATLIBDIR=/usr/local/lib
  fi
fi

if test "${HAVE_LIBEXPAT:-unset}" != "unset" ; then
  AC_SUBST(HAS_EXPAT, 1)
  AC_DEFINE(P_EXPAT, 1, "expat found")
  if test ${EXPATINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${EXPATINCLUDEDIR}"
  fi
  if test ${EXPATLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$LDFLAGS -L${EXPATLIBDIR}"
  fi
  ENDLDLIBS="$ENDLDLIBS -lexpat"
fi


dnl ########################################################################
dnl Speach

dnl MSWIN Speech API,P_SAPI,1,,include\sphelper.h,,\Program Files\Microsoft Speech SDK 5.1\


dnl ########################################################################
dnl check for pthreads library

dnl MSWIN Semaphore Support,P_HAS_SEMAPHORES

AC_CHECK_LIB(pthread, pthread_create, HAS_PTHREADS=yes, HAS_PTHREADS=no)

if test ${HAS_PTHREADS} = yes ; then
  AC_DEFINE(P_PTHREADS, 1, "PThreads found")
  dnl
  dnl posix semaphore support in darwin/macosx is broken
  dnl 
  if test ${OSTYPE} != Darwin ; then
    AC_DEFINE(P_HAS_SEMAPHORES, 1, "PThreads found")
  fi
  ENDLDLIBS="$ENDLDLIBS -lpthread"
  STDCCFLAGS="$STDCCFLAGS -D_REENTRANT"
fi


dnl ########################################################################
dnl check for dynamic library code (dlopen end friends)

dnl MSWIN DLL Support,P_DYNALINK

LIBS=""
AC_CHECK_HEADERS(dlfcn.h, HAVE_DYNALINK=1)
if test "u${HAVE_DYNALINK:-nset}" != "unset" ; then
  AC_DEFINE(P_DYNALINK, 1, "dlopen libraries found")
fi

dnl ########################################################################
dnl look for IPV6 functions

dnl MSWIN IPv6 Support,P_HAS_IPV6,1,@IPV6_DIR@,ws2tcpip.h,sin6_scope_id,\Program Files\Microsoft Visual Studio\VC98\Include\

AC_CACHE_CHECK([for IPv6 Support], HAS_IPV6,
[AC_TRY_COMPILE([#include <sys/types.h>
                 #include <netinet/in.h>],
                 [struct in6_addr s], HAS_IPV6=yes, HAS_IPV6=no)])

if test $HAS_IPV6 = yes ; then
  AC_DEFINE(P_HAS_IPV6, 1, "IPV6 enabled")
fi

dnl ########################################################################
dnl check for linux video devices

AC_CHECK_HEADER(linux/videodev.h, HAS_LINUX_VIDEODEV_H=1)
if test "${HAS_LINUX_VIDEODEV_H:-unset}" = unset ; then
  AC_DEFINE(NO_VIDEO_CAPTURE, 1, "No Linux video capture")
fi

dnl ########################################################################
dnl output make directives

dnl resolver needs to be at the end
if test "u${HAVE_RESOLVER:-nset}" != "unset" ; then
  # Darwin does not needs -lresolv
  if test ${OSTYPE} != Darwin ; then
    ENDLDLIBS="$ENDLDLIBS $HAVE_RESOLVER"
  fi
fi

dnl dl needs to be at the end
if test "u${HAVE_DYNALINK:-nset}" != "unset" ; then
  ENDLDLIBS="$ENDLDLIBS -ldl"
fi

AC_SUBST(STDCCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ENDLDLIBS)

AC_CONFIG_FILES(make/ptbuildopts.mak)

dnl ########################################################################
dnl output header file

AC_CONFIG_HEADERS(include/ptbuildopts.h)

AC_OUTPUT()
