AC_INIT(include/ptlib.h)

AC_CONFIG_SUBDIRS(plugins)

AC_PROG_CXX

dnl ########################################################################
dnl set the PWLIB directory to the current directory

PWLIBDIR=`pwd`
AC_SUBST(PWLIBDIR)
dnl set the pwlib installation dir for pwlib-config
AC_SUBST(PWINSTDIR)

dnl ########################################################################
dnl set the PREFIX accordingly
if test "x$prefix" = "xNONE"; then
   INSTALLPREFIX="/usr/local"
else
   INSTALLPREFIX="${prefix}"
fi

AC_SUBST(INSTALLPREFIX)


dnl ########################################################################
dnl set LIBDIR accordingly
LIBDIR="${libdir}"
AC_SUBST(LIBDIR)


dnl ########################################################################
dnl extract the PWLIB version
MAJOR_VERSION=`cat ${PWLIBDIR}/version.h | grep MAJOR_VERSION | cut -f3 -d' '`
MINOR_VERSION=`cat ${PWLIBDIR}/version.h | grep MINOR_VERSION | cut -f3 -d' '`
BUILD_NUMBER=`cat ${PWLIBDIR}/version.h | grep BUILD_NUMBER | cut -f3 -d' '`
PWLIB_VERSION="${MAJOR_VERSION}.${MINOR_VERSION}.${BUILD_NUMBER}"
AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(BUILD_NUMBER)
AC_SUBST(PWLIB_VERSION)
AC_SUBST(MAJOR_VERSION, $MAJOR_VERSION)
AC_SUBST(MINOR_VERSION, $MINOR_VERSION)
AC_SUBST(BUILD_NUMBER, $BUILD_NUMBER)

echo "PTLib version is ${PWLIB_VERSION}"

dnl ########################################################################
dnl set the OSTYPE and MACHTYPE

AC_CANONICAL_TARGET()

TARGETDIR=unix
OSTYPE=

case "$target_os" in
  linux*)          OSTYPE=linux ;  
                   OSRELEASE=`uname -r` ;
                   STDCCFLAGS="-DP_LINUX=$OSRELEASE" ;;

  freebsd* )       OSTYPE=FreeBSD ;
                   if test "x$OSRELEASE" = "x"; then
                     OSRELEASE=`sysctl -n kern.osreldate` ;
                   fi
                   STDCCFLAGS="-DP_FREEBSD=${OSRELEASE}" ;;

  openbsd* )       OSTYPE=OpenBSD ;
                   OSRELEASE=`sysctl -n kern.osrevision` ;
		   ENDLDLIBS="-lossaudio" ;
                   STDCCFLAGS="$STDCCFLAGS -DP_OPENBSD=$OSRELEASE" ;;

  netbsd* )        OSTYPE=NetBSD ;
                   OSRELEASE=`/sbin/sysctl -n kern.osrevision` ;
		   ENDLDLIBS="-lossaudio" ;
                   STDCCFLAGS="$STDCCFLAGS -DP_NETBSD=$OSRELEASE" ;;

  solaris* | sunos ) OSTYPE=solaris ;
                   OSRELEASE=`uname -r | sed "s/5\.//g"` ;
                   STDCCFLAGS="-DP_SOLARIS=$OSRELEASE" ;;

  darwin* )	   OSTYPE=Darwin ;
		   OSRELEASE=`uname -r | sed "s/\.//g"` ;
                   STDCCFLAGS="-DP_MACOSX=$OSRELEASE -DNO_LONG_DOUBLE" ;
                   SHAREDLIBEXT="dylib";;

  * )		   OSTYPE="$target_os" ;
  		   OSRELEASE=`uname -r` ;
                   STDCCFLAGS="-DP_UNKNOWN=$OSTYPE_$OSRELEASE" ;
		   echo "OS $target_os not recognized - proceed with caution!" ;;
esac

MACHTYPE=

case "$target_cpu" in
   x86 | i686 | i586 | i486 | i386 ) MACHTYPE=x86 ;;

   x86_64)	   MACHTYPE=x86_64 ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   alpha | alphaev56) MACHTYPE=alpha ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   sparc )         MACHTYPE=sparc ;;

   powerpc )       MACHTYPE=ppc ;;

   powerpc64 )       MACHTYPE=ppc ;
	     	     STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   ppc64 )         MACHTYPE=ppc ;
		   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   ppc )           MACHTYPE=ppc ;;

   ia64)	   MACHTYPE=ia64 ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   s390x)	   MACHTYPE=s390x ;
                   STDCCFLAGS="$STDCCFLAGS -DP_64BIT" ;;

   * )		   MACHTYPE=$target_cpu ;
		   echo "CPU $target_cpu not recognized - proceed with caution!" ;;
esac

echo "OSTYPE set to $OSTYPE";
echo "OSRELEASE set to $OSRELEASE";
echo "MACHTYPE set to $MACHTYPE";

AC_SUBST(MACHTYPE,  $MACHTYPE)
AC_SUBST(OSTYPE,    $OSTYPE)
AC_SUBST(OSRELEASE, $OSRELEASE)
AC_SUBST(TARGETDIR, $TARGETDIR)

dnl ########################################################################
dnl set the shared library extension, if not already set

if test "x${SHAREDLIBEXT}" = "x" ; then
  SHAREDLIBEXT="so"
fi
AC_SUBST(SHAREDLIBEXT, $SHAREDLIBEXT)
AC_DEFINE(P_SHAREDLIBEXT, $SHAREDLIBEXT, "shared library extension")

dnl ########################################################################
dnl check the endianness

dnl MSWIN_DISPLAY byteorder,Byte Order
dnl MSWIN_DEFINE  byteorder,PBYTE_ORDER=PLITTLE_ENDIAN

AC_C_BIGENDIAN()
if test ${ac_cv_c_bigendian} = yes ; then
  PBYTE_ORDER=PBIG_ENDIAN
else
  PBYTE_ORDER=PLITTLE_ENDIAN
fi

AC_DEFINE_UNQUOTED(PBYTE_ORDER, $PBYTE_ORDER, "byte order")

dnl ########################################################################
dnl look for compile flags
AC_LANG(C++)

dnl AC_MSG_CHECKING(if compiler accepts -fno-rtti)
dnl AC_LANG_CONFTEST([[int main(int ac,char **av) { return 0; }]])
dnl $CC $CFLAGS -fno-rtti -c conftest.c > /dev/null 2>&1
dnl if test $? = 0 ; then
dnl   AC_MSG_RESULT(yes)
dnl   STDCCFLAGS="$STDCCFLAGS -fno-rtti"
dnl else
dnl   AC_MSG_RESULT(no)
dnl fi

GCSECTIONS=0

AC_MSG_CHECKING(if linker accepts --gc-sections)
AC_LANG_CONFTEST([[int main(int ac,char **av) { return 0; }]])
$CC $CFLAGS -Wl,--gc-sections conftest.c > /dev/null 2>&1
if test $? = 0 ; then
  AC_MSG_RESULT(yes)

  AC_MSG_CHECKING(if compiler accepts -ffunction-sections)
  AC_LANG_CONFTEST([[int main(int ac,char **av) { return 0; }]])
  $CC $CFLAGS -ffunction-sections -c conftest.c > /dev/null 2>&1
  if test $? = 0 ; then
    AC_MSG_RESULT(yes)
    STDCCFLAGS="$STDCCFLAGS -ffunction-sections"
    GCSECTIONS=1
  else
    AC_MSG_RESULT(no)
  fi

  AC_MSG_CHECKING(if compiler accepts -fdata-sections)
  AC_LANG_CONFTEST([[int main(int ac,char **av) { return 0; }]])
  $CC $CFLAGS -fdata-sections -c conftest.c > /dev/null 2>&1
  if test $? = 0 ; then
    AC_MSG_RESULT(yes)
    STDCCFLAGS="$STDCCFLAGS -fdata-sections"
    GCSECTIONS=1
  else
    AC_MSG_RESULT(no)
  fi

  AC_MSG_CHECKING(if compiler accepts -fvtable-gc)
  AC_LANG_CONFTEST([[int main(int ac,char **av) { return 0; }]])
  $CPLUSPLUS $CFLAGS -fvtable-gc -c conftest.c > /dev/null 2>&1
  if test $? = 0 ; then
    AC_MSG_RESULT(yes)
    STDCCFLAGS="$STDCCFLAGS -fvtable-gc"
    GCSECTIONS=1
  else
    AC_MSG_RESULT(no)
  fi

  if test $GCSECTIONS = 1; then
    if test "${OSTYPE}" != "Darwin" ; then
      LDFLAGS="$LDFLAGS -Wl,--gc-sections"
    fi
  fi

else
  AC_MSG_RESULT(no)
fi

dnl ########################################################################
dnl check for pthreads library

dnl MSWIN_DISPLAY semaphore,Semaphore Support
dnl MSWIN_DEFINE  semaphore,P_HAS_SEMAPHORES

dnl Linux, Mac OS X use libpthread and -lpthread
dnl FreeBSD uses the -pthread compiler option and uses libc_r

AC_CHECK_LIB(pthread, pthread_create, HAS_PTHREADS=yes, HAS_PTHREADS=no)
if test ${HAS_PTHREADS} = yes ; then
  ENDLDLIBS="$ENDLDLIBS -lpthread"
  STDCCFLAGS="$STDCCFLAGS -D_REENTRANT"
else
  dnl FreeBSD checks
  AC_CHECK_LIB(c_r, pthread_create, HAS_PTHREADS=yes, HAS_PTHREADS=no)
  if test ${HAS_PTHREADS} = yes ; then
    ENDLDLIBS="$ENDLDLIBS -pthread"
    STDCCFLAGS="$STDCCFLAGS -D_REENTRANT -pthread"
  fi
fi


if test ${HAS_PTHREADS} != yes ; then
  AC_MSG_ERROR(must have pthreads!)
fi

AC_DEFINE(P_PTHREADS, 1, "PThreads found")
dnl
dnl posix semaphore support in darwin/macosx is broken
dnl 
if test ${OSTYPE} != Darwin ; then
  AC_DEFINE(P_HAS_SEMAPHORES, 1, "using semaphores")
fi

dnl ########################################################################
dnl check for regex library
AC_CHECK_FUNC(regcomp,HAS_REGEX=1)
if test "x$HAS_REGEX" != "x" ; then
  AC_CHECK_HEADERS(regex.h, HAS_REGEX=1, HAS_REGEX=)
fi
AC_SUBST(HAS_REGEX)
AC_DEFINE_UNQUOTED(P_REGEX, $HAS_REGEX, "Regex library found")


dnl ########################################################################
dnl check for dynamic library code (dlopen end friends)

dnl MSWIN DLL Support,,P_DYNALINK

LIBS=""
if test ${OSTYPE} = Darwin ; then
  AC_DEFINE(P_DYNALINK, 1, "dlopen implemented inside pwlib in darwin")
else
  AC_CHECK_HEADERS(dlfcn.h, P_DYNALINK=1)
  if test "u${P_DYNALINK:-nset}" != "unset" ; then
    AC_DEFINE(P_DYNALINK, 1, "dlopen found")
  else
    AC_CHECK_LIB(dl,dlopen,HAS_LIBDL=yes, HAS_LIBDL=no)
    if test ${HAS_LIBDL} = yes ; then
      AC_DEFINE(P_DYNALINK, 1, "dlopen found")
    fi
  fi
fi

dnl #########################################################################
dnl check to see if plugins enabled
dnl MSWIN Plugin Support,,P_HAS_PLUGINS
plugins="no"
AC_MSG_CHECKING(if plugins support needs to be compiled)
AC_ARG_ENABLE(plugins,
       [  --enable-plugins        enable plugins' support in PWLIB],
       plugins=$enableval)

if test "${plugins}" = "no" ; then
  AC_MSG_RESULT(no)
  AC_SUBST(HAS_PLUGINS, 0)
elif test "${P_DYNALINK:-unset}" = "unset" ; then
  AC_MSG_RESULT(plugins disabled as dlopen not available)
  AC_SUBST(HAS_PLUGINS, 0)
else
  AC_MSG_RESULT(plugins enabled)
  AC_SUBST(HAS_PLUGINS, 1)
  AC_DEFINE(P_HAS_PLUGINS, 1, "plugins enabled")
fi

AC_DEFINE_UNQUOTED(P_DEFAULT_PLUGIN_DIR, "${INSTALLPREFIX}/lib/pwlib")

dnl ########################################################################
dnl look for DNS resolver code (must be done before OpenLDAP)
dnl on some systems, the resolver is in libc
dnl but needs resolv.h included which defines res_search as __res_search

dnl MSWIN_DISPLAY    resolver,DNS Resolver
dnl MSWIN_CHECK_FILE resolver,include\windns.h,P_DNS=1
dnl MSWIN_DIR_SYMBOL resolver,DNS_DIR
dnl MSWIN_CHECK_DIR  resolver,\Program Files\Microsoft SDK\

AC_CHECK_FUNC(res_search, HAVE_RESOLVER=1)
if test "${HAVE_RESOLVER:-unset}" != "unset" ; then
  RESOLVER_LIBS=""
else
  AC_MSG_CHECKING([for res_search in -lresolv])
  LIBS="-lresolv"
  AC_COMPILE_IFELSE([[
#include <resolv.h>
int main(int argc,char **argv){
 res_search (NULL, 0, 0, NULL, 0);
}]],HAVE_RESOLVER=1)
  if test "${HAVE_RESOLVER:-unset}" != "unset" ; then
    AC_MSG_RESULT(yes)
    RESOLVER_LIBS="-lresolv"
  else
    AC_SEARCH_LIBS(__res_search, resolv, HAVE_RESOLVER=1)
  fi
fi

if test "${HAVE_RESOLVER:-unset}" != "unset" ; then
  AC_DEFINE(P_DNS, 1, "resolver libraries found")
fi

dnl ########################################################################
dnl look for OpenLDAP

dnl MSWIN_DISPLAY    openldap,Open LDAP
dnl MSWIN_CHECK_FILE openldap,include\ldap.h|OpenLDAP,P_LDAP=1
dnl MSWIN_DIR_SYMBOL openldap,LDAP_DIR
dnl MSWIN_CHECK_DIR  openldap,..\openldap\
dnl MSWIN_CHECK_DIR  openldap,..\external\openldap\
dnl MSWIN_CHECK_DIR  openldap,\openldap\
dnl MSWIN_CHECK_DIR  openldap,c:\openldap\

if test "${HAVE_RESOLVER:-unset}" != "unset" ; then
  AC_CHECK_HEADERS(ldap.h, HAS_OPENLDAP=1)
  if test "${HAS_OPENLDAP:-unset}" != "unset" ; then
    AC_CHECK_LIB(ldap, ldap_open, HAS_OPENLDAP=1, HAS_OPENLDAP=,-llber $RESOLVER_LIBS)
  else
    AC_CHECK_FILE(/usr/local/include/ldap.h, HAS_OPENLDAP=1)
    if test "${HAS_OPENLDAP:-unset}" != "unset" ; then
      OPENLDAPINCLUDEDIR=/usr/local/include
      OPENLDAPLIBDIR=/usr/local/lib
    fi
  fi
fi

if test "${HAS_OPENLDAP:-unset}" != "unset" ; then
  AC_SUBST(HAS_OPENLDAP, 1)
  AC_DEFINE(P_LDAP, 1, "OpenLDAP found")
  if test ${OPENLDAPINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${OPENLDAPINCLUDEDIR}"
  fi
  if test ${OPENLDAPLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$LDFLAGS -L${OPENLDAPLIBDIR}"
  fi
  ENDLDLIBS="$ENDLDLIBS -llber -lldap -lldap_r"
fi

dnl ########################################################################
dnl look for OpenSSL
dnl check for environment variable, then assume standard system install
dnl this process is made incredibly more complex by the fact that RedHad 9
dnl is completely fscked. The default OpenSSL installation requires Kerberos,
dnl even when Kerberos is not installed, requiring an explicit #define to
dnl make it compile
dnl As if that is not enough, autoconf gets very confused if configure.in
dnl contains a AC_CHECK_HEADER directive that never gets used. So we have 
dnl to ensure that it is always called

dnl MSWIN_DISPLAY    openssl,Open SSL
dnl MSWIN_CHECK_FILE openssl,inc32\openssl\ssl.h,P_SSL=1
dnl MSWIN_DIR_SYMBOL openssl,SSL_DIR
dnl MSWIN_CHECK_DIR  openssl,..\openssl\
dnl MSWIN_CHECK_DIR  openssl,..\external\openssl\
dnl MSWIN_CHECK_DIR  openssl,\openssl\
dnl MSWIN_CHECK_DIR  openssl,c:\openssl\

dnl check to see OPENSSLDIR is set
dnl if it is, we assume it correct - no further checking required
if test ${OPENSSLDIR:-unset} != "unset" ; then
  AC_MSG_CHECKING([for ${OPENSSLDIR}/include/openssl/ssl.h])
  if test -e ${OPENSSLDIR}/include/openssl/ssl.h ; then
    AC_MSG_RESULT(yes)
    SSLHDR=1
    SSLINCLUDEDIR="${OPENSSLDIR}/include"
    SSLLIBDIR="${OPENSSLDIR}/lib"
  else
    AC_MSG_RESULT(no)
  fi
fi


dnl if OPENSSLDIR is not set, then check to see if OpenSSL
dnl is installed in the standard system dirs. And also see if
dnl if it works using crazy RedHat checks
if test "${SSLHDR:-unset}" = "unset" ; then
  AC_CHECK_HEADERS(openssl/ssl.h,SSLDIR=1)
  if test "${SSLHDR:-unset}" = "unset" ; then
    AC_MSG_CHECKING([if openssl/ssl.h works with OPENSSL_NO_KRB5])
    AC_COMPILE_IFELSE([[#define OPENSSL_NO_KRB5
#include <openssl/ssl.h>
int main(int argc,char **argv){}]],SSLHDR=1)
    if test ${SSLHDR:-unset} != "unset" ; then
      AC_MSG_RESULT(yes)
      SSLCCFLAGS=" -DOPENSSL_NO_KRB5"
    else
      AC_MSG_RESULT(no)
    fi
  fi
fi


dnl if we have not found OpenSSL so far, then look for it in 
dnl several standard places, and check for crazy RedHat install too
if test "${SSLHDR:-unset}" = "unset" ; then

  dnl We want to switch to C language to get .c extension for conftest files
  AC_LANG_PUSH(C)

  for openssl_dir in /usr/local/openssl /usr/local/ssl ; do
    AC_MSG_CHECKING([for OpenSSL in $openssl_dir])
    if test ! -f ${openssl_dir}/include/openssl/ssl.h ; then
      AC_MSG_RESULT(no)
    else
      AC_LANG_CONFTEST([[#include "${openssl_dir}/include/openssl/ssl.h"
int main(int argc,char **argv){ return 0; }]])
$CC $CFLAGS -I${openssl_dir}/include -c conftest.c > /dev/null 2>&1
      if test $? = 0 ; then
        AC_MSG_RESULT(yes)
        SSLHDR=1
        SSLCCFLAGS=""
        SSLINCLUDEDIR="${openssl_dir}/include"
        SSLLIBDIR="${openssl_dir}/lib"
        break
      else
        AC_MSG_RESULT(no)
        AC_MSG_CHECKING([if ${openssl_dir}/include/openssl/ssl.h works with OPENSSL_NO_KRB5...])
        AC_LANG_CONFTEST([[#define OPENSSL_NO_KRB5
#include "${openssl_dir}/include/openssl/ssl.h"
int main(int argc,char **argv){}]])
        $CC $CFLAGS -I${openssl_dir}/openssl/include -c conftest.c > /dev/null 2>&1
        if test $? = 0 ; then
          AC_MSG_RESULT(yes)
          SSLHDR=1
          SSLCCFLAGS=" -DOPENSSL_NO_KRB5"
          SSLINCLUDEDIR="${openssl_dir}/include"
          SSLLIBDIR="${openssl_dir}/lib"
          break
        else
          AC_MSG_RESULT(no)
        fi
      fi
    fi
  done
  AC_LANG_POP(C)
fi

if test ${SSLHDR:-unset} != "unset" ; then
  AC_SUBST(HAS_OPENSSL, 1)
  AC_DEFINE(P_SSL, 1, "OpenSSL found")
  if test ${SSLINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${SSLINCLUDEDIR}"
  fi
  if test ${SSLLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$LDFLAGS -L${SSLLIBDIR}"
  fi
  STDCCFLAGS="${STDCCFLAGS}${SSLCCFLAGS}"
  ENDLDLIBS="$ENDLDLIBS -lssl -lcrypto"
fi

dnl ########################################################################
dnl look for expat XML parser

dnl MSWIN_DISPLAY    expat,Expat XML
dnl MSWIN_CHECK_FILE expat,lib\expat.h,P_EXPAT=1
dnl MSWIN_DIR_SYMBOL expat,EXPAT_DIR
dnl MSWIN_CHECK_DIR  expat,..\expat\
dnl MSWIN_CHECK_DIR  expat,..\external\expat\
dnl MSWIN_CHECK_DIR  expat,\expat
dnl MSWIN_CHECK_DIR  expat,c:\expat\

AC_CHECK_HEADERS(expat.h, HAS_EXPAT=1)
if test "${HAS_EXPAT:-unset}" != "unset" ; then
  AC_CHECK_LIB(expat, XML_ParserCreate, HAS_EXPAT=1, HAS_EXPAT=)
else
  AC_CHECK_FILE(/usr/local/include/expat.h, HAS_EXPAT=1)
  if test "${HAS_EXPAT:-unset}" != "unset" ; then
    EXPATINCLUDEDIR=/usr/local/include
    EXPATLIBDIR=/usr/local/lib
  fi
fi

if test "${HAS_EXPAT:-unset}" != "unset" ; then
  AC_SUBST(HAS_EXPAT, 1)
  AC_DEFINE(P_EXPAT, 1, "expat found")
  if test ${EXPATINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${EXPATINCLUDEDIR}"
  fi
  if test ${EXPATLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$LDFLAGS -L${EXPATLIBDIR}"
  fi
  ENDLDLIBS="$ENDLDLIBS -lexpat"
fi


dnl ########################################################################
dnl Speech

dnl MSWIN_DISPLAY    sapi,Speech API
dnl MSWIN_CHECK_FILE sapi,include\sphelper.h,P_SAPI=1
dnl MSWIN_DIR_SYMBOL sapi,SAPI_DIR
dnl MSWIN_CHECK_DIR  sapi,\Program Files\Microsoft Speech SDK 5.1\


dnl ########################################################################
dnl look for SDL, but only if we have pthreads

dnl MSWIN_DISPLAY    libsdl,Simple DirectMedia Layer
dnl MSWIN_CHECK_FILE libsdl,include\SDL_video.h,P_SDL=1
dnl MSWIN_CHECK_FILE libsdl,lib\SDL.lib,P_SDL_LIBDIR="lib"
dnl MSWIN_DIR_SYMBOL libsdl,SDL_DIR
dnl MSWIN_CHECK_DIR  libsdl,..\sdl\
dnl MSWIN_CHECK_DIR  libsdl,..\external\sdl\
dnl MSWIN_CHECK_DIR  libsdl,\sdl\
dnl MSWIN_CHECK_DIR  libsdl,c:\sdl\

dnl SDL checks
if test "${SDLLIB:-unset}" = "unset" ; then
  SDLLIB=SDL
fi

dnl Linux check
AC_CHECK_HEADERS(SDL/SDL.h, HAS_SDL=1)
if test "${HAS_SDL:-unset}" != "unset" ; then
  AC_CHECK_LIB(SDL, SDL_CreateYUVOverlay, HAS_SDL=1, HAS_SDL=, -lpthread)
fi

dnl freeBSD SDL check
if test "${HAS_SDL:-unset}" = "unset" ; then
  AC_CHECK_FILE(/usr/local/include/SDL11/SDL.h, HAS_SDL=1)
  if test "${HAS_SDL:-unset}" != "unset" ; then
    SDLLIB=SDL-1.1
  fi
fi

if test "${HAS_SDL:-unset}" != "unset" ; then
  AC_SUBST(HAS_SDL, 1)
  AC_DEFINE(P_SDL, 1, "SDL found")
  if test ${SDLINCLUDEDIR:-unset} != "unset" ; then
    STDCCFLAGS="$STDCCFLAGS -I${SDLINCLUDEDIR}"
  fi
  if test ${SDLLIBDIR:-unset} != "unset" ; then
    LDFLAGS="$LDFLAGS -L${SDLLIBDIR}"
  fi
  ENDLDLIBS="$ENDLDLIBS -l${SDLLIB}"
fi


dnl ########################################################################
dnl look for IPV6 functions

dnl MSWIN_DISPLAY    ipv6,IPv6 Support
dnl MSWIN_CHECK_FILE ipv6,ws2tcpip.h|sin6_scope_id,P_HAS_IPV6=1
dnl MSWIN_DIR_SYMBOL ipv6,IPV6_DIR
dnl MSWIN_CHECK_DIR  ipv6,\Program Files\Microsoft Visual Studio\VC98\Include\
dnl MSWIN_CHECK_DIR  ipv6,\Program Files\Microsoft SDK\include\

AC_CACHE_CHECK([for IPv6 Support], HAS_IPV6,
[AC_TRY_COMPILE([#include <sys/types.h>
                 #include <netinet/in.h>],
                 [struct sockaddr_in6 s; s.sin6_scope_id = 0;], HAS_IPV6=yes, HAS_IPV6=no)])

if test $HAS_IPV6 = yes ; then
  AC_DEFINE(P_HAS_IPV6, 1, "IPV6 enabled")
fi

dnl ########################################################################
dnl look for QoS functions

dnl MSWIN_DISPLAY    qos,QoS Support
dnl MSWIN_CHECK_FILE qos,qossp.h|QOS_DESTADDR,P_HAS_QOS=1
dnl MSWIN_DIR_SYMBOL qos,QOS_DIR
dnl MSWIN_CHECK_DIR  qos,\Program Files\Microsoft Visual Studio\VC98\Include\
dnl MSWIN_CHECK_DIR  qos,\Program Files\Microsoft SDK\include\

AC_DEFINE(P_HAS_QOS, 1)

dnl ########################################################################
dnl check for video capture support.
dnl videodev.h on linux
dnl machine/ioctl_meteor on FreeBSD
dnl i386/ioctl_meteor on OpenBSD
dnl dev/ic/bt8xx on NetBSD

HAS_VIDEO_CAPTURE=no
AC_CHECK_HEADER(linux/videodev.h, HAS_VIDEO_CAPTURE=yes)
AC_CHECK_HEADER(machine/ioctl_meteor.h, HAS_VIDEO_CAPTURE=yes)
AC_CHECK_HEADER(i386/ioctl_meteor.h, HAS_VIDEO_CAPTURE=yes)
AC_CHECK_HEADER(dev/ic/bt8xx.h, HAS_VIDEO_CAPTURE=yes)
if test "${HAS_VIDEO_CAPTURE}" != "yes" ; then
  AC_DEFINE(NO_VIDEO_CAPTURE, 1, "No Linux/BSD video capture")
  echo "No Video Capture support"
fi


dnl ########################################################################
dnl check for various functions
dnl According to Andre Schulze <as8@rncmm2.urz.tu-dresden.de>
dnl Solaris swab should not be used
if test "$OSTYPE" = "solaris" ; then
  USE_SYSTEM_SWAB=
else
  AC_CHECK_FUNC(swab,USE_SYSTEM_SWAB=1)
fi
AC_DEFINE(USE_SYSTEM_SWAB)

dnl ########################################################################
dnl output make directives

dnl resolver needs to be at the end
if test "${HAVE_RESOLVER:-unset}" != "unset" ; then
  if test "${RESOLVER_LIBS:-unset}" != "unset" ; then
    ENDLDLIBS="$ENDLDLIBS $RESOLVER_LIBS"
  fi
fi

dnl dl needs to be at the end
if test "${OSTYPE}" != "Darwin" ; then
  if test ${HAS_LIBDL} = yes ; then
    ENDLDLIBS="$ENDLDLIBS -ldl"
  fi
fi

AC_SUBST(STDCCFLAGS)
AC_SUBST(OPTSTDCCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ENDLDLIBS)

AC_CONFIG_FILES(make/ptbuildopts.mak)
AC_CONFIG_FILES([make/ptlib-config], [chmod a+x make/ptlib-config])
AC_CONFIG_FILES(Makefile)

dnl ########################################################################
dnl output header file
#AC_CONFIG_FILES(include/ptbuildopts.h.in)
AC_CONFIG_HEADERS(include/ptbuildopts.h)

AC_OUTPUT()
