/*
 * buildopts.h
 *
 * Build options generated by the configure script.
 *
 * Portable Windows Library
 *
 * Copyright (c) 2003 Equivalence Pty. Ltd.
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
 * the License for the specific language governing rights and limitations
 * under the License.
 *
 * The Original Code is Portable Windows Library.
 *
 * The Initial Developer of the Original Code is Equivalence Pty. Ltd.
 *
 * Contributor(s): ______________________________________.
 *
 * $Revision$
 * $Author$
 * $Date$
 */

#ifndef PTLIB_BUILDOPTS_H
#define PTLIB_BUILDOPTS_H


#undef    PTLIB_MAJOR
#undef    PTLIB_MINOR
#undef    PTLIB_BUILD
#undef    PTLIB_VERSION

#define PTLIB_VERSION_INT(major,minor,build) ((major<<24)|(minor<<16)|build)
#define PTLIB_CHECK_VERSION(major,minor,build) \
          (PTLIB_VERSION_INT(PTLIB_MAJOR,PTLIB_MINOR,PTLIB_BUILD) >= PTLIB_VERSION_INT(major,minor,build))


/////////////////////////////////////////////////
//
// host type
//

#undef    P_LINUX
#undef    P_FREEBSD
#undef    P_OPENBSD
#undef    P_NETBSD
#undef    P_SOLARIS
#undef    P_MACOSX
#undef    P_CYGWIN
#undef    P_MINGW
#undef    P_GNU_HURD
#undef    P_UNKNOWN_OS

#ifndef _WIN32_WCE

// Windows API version for compile
#undef    WINVER

#endif

/////////////////////////////////////////////////
//
// Language stuff
//

#undef  P_USE_STANDARD_CXX_BOOL
#if !defined(P_USE_STANDARD_CXX_BOOL)
  #define P_USE_INTEGER_BOOL 1
#endif

#undef P_EXCEPTIONS
#define P_USE_ASSERTS 1


/////////////////////////////////////////////////
//
// Integer/char types
//

#undef SIZEOF_INT
#undef PNO_LONG_DOUBLE

#undef P_HAS_WCHAR
#if P_HAS_WCHAR
  #undef P_HAS_WOSTREAM
#endif

#undef PBYTE_ORDER
#ifndef PBYTE_ORDER
  #if defined(__BIG_ENDIAN__)
    #define PBYTE_ORDER PBIG_ENDIAN
  #else
    #define PBYTE_ORDER PLITTLE_ENDIAN
  #endif
#endif


/////////////////////////////////////////////////
//
// Runtime dynamic link libraries
//

#undef P_DYNALINK
#undef P_PLUGINS
#undef P_DEFAULT_PLUGIN_DIR


/////////////////////////////////////////////////
//
// Threads and Unix variants for network stuff
//

#undef P_PTHREADS
#undef P_HAS_SEMAPHORES
#undef P_HAS_ATOMIC_INT
#undef P_NEEDS_GNU_CXX_NAMESPACE
#undef P_GNU_ALLOCATOR
#undef P_HAS_RECURSIVE_MUTEX
#undef P_HAS_RECVMSG
#undef P_HAS_RECVMSG_MSG_ERRQUEUE
#undef P_HAS_RECVMSG_IP_RECVERR
#undef P_HAS_NETLINK
#undef P_SETPGRP_NOPARM
#undef P_HAS_NAMED_SEMAPHORES
#undef P_PTHREADS_XPG6      
#undef P_HAS_SEMAPHORES_XPG6
#undef P_HAS_AIO
#undef P_HAS_POSIX_READDIR_R
#undef P_HAS_UPAD128_T
#undef P_HAS_INET_NTOP
#undef P_HAS_IPV6_ADD_MEMBERSHIP

#ifndef _WIN32_WCE
  #undef P_HAS_IPV6
  #undef P_GQOS
  #undef P_QWAVE
  #undef P_QWAVE_DSCP
#endif //  _WIN32_WCE


/////////////////////////////////////////////////
//
// various platform specific features
//

#undef P_LPIA
#undef USE_SYSTEM_SWAB
#undef P_SHM_VIDEO


/////////////////////////////////////////////////
//
// various non-platform specific features
//

#undef PMEMORY_CHECK

#undef P_AUDIO
#undef P_VIDEO

#undef P_REGEX
#undef P_TTS
#undef P_ASN
#undef P_PIPECHAN
#undef P_DTMF
#undef P_WAVFILE
#undef P_SOCKS
#undef P_FTP
#undef P_TELNET
#undef P_CLI
#undef P_ODBC
#undef P_SERIAL
#undef P_POP3SMTP
#undef P_CONFIG_FILE

#if WIN32 || P_PIPECHAN
  #undef P_REMCONN
#endif

#if P_ASN
  #undef P_SNMP
#endif

#undef P_NAT
#if P_NAT
  #undef P_STUN
  #if P_STUN
    #undef P_STUNSRVR
  #endif
#endif

#undef P_URL
#ifdef P_URL
  #undef P_VCARD
  #undef P_HTTP
  #if P_HTTP
    #if P_CONFIG_FILE
      #undef P_HTTPFORMS
      #if P_HTTPFORMS
        #undef P_HTTPSVC
      #endif
    #endif
    #undef P_SSDP
  #endif
#endif

#undef P_VIDFILE
#undef P_FFVDEV


/////////////////////////////////////////////////
//
// PCAP support
//

#undef P_PCAP
#undef P_PCAP_WIN64
#undef P_PCAP_WIN32

#if (defined(P_PCAP_WIN64) &&  defined(P_64BIT)) || \
    (defined(P_PCAP_WIN32) && !defined(P_64BIT))
  #define P_PCAP 1
#endif

#if defined(_MSC_VER) && defined(P_PCAP)
  #pragma include_alias(<pcap/pcap.h>, <@PCAP_DIR@/include/pcap/pcap.h>)
  #pragma include_alias(<pcap/bpf.h>, <@PCAP_DIR@/include/pcap/bpf.h>)
  #pragma include_alias(<pcap-stdinc.h>, <@PCAP_DIR@/include/pcap-stdinc.h>)
  
  #if defined(P_64BIT)
    #define P_PCAP_LIBRARY1 "@PCAP_DIR@/lib/x64/Packet.lib"
    #define P_PCAP_LIBRARY2 "@PCAP_DIR@/lib/x64/wpcap.lib"
  #else
    #define P_PCAP_LIBRARY1 "@PCAP_DIR@/lib/Packet.lib"
    #define P_PCAP_LIBRARY2 "@PCAP_DIR@/lib/wpcap.lib"
  #endif
#endif


/////////////////////////////////////////////////
//
// OpenSSL library for secure sockets layer
//

#undef P_SSL
#undef P_SSL_WIN64
#undef P_SSL_WIN32
#undef P_SSL_WINCE

#if (defined(P_SSL_WIN64) &&  defined(P_64BIT)                        ) || \
    (defined(P_SSL_WIN32) && !defined(P_64BIT) && !defined(_WIN32_WCE)) || \
    (defined(P_SSL_WINCE)                      &&  defined(_WIN32_WCE))
  #define P_SSL 1
#endif

#if P_SSL
  #undef P_SSL_AES
  #undef P_SSL_USE_CONST
#endif

#if defined(_MSC_VER) && P_SSL

  #if P_64BIT

    #define P_SSL_USE_CONST 1

    #define P_SSL_INCLUDE(inc) include_alias(<inc>, <@SSL_WIN64_DIR@/include/inc>)

    #ifdef _DEBUG
      #define P_SSL_LIB1 "@SSL_WIN64_DIR@/lib/VC/libeay32MDd.lib"
      #define P_SSL_LIB2 "@SSL_WIN64_DIR@/lib/VC/ssleay32MDd.lib"
    #else
      #define P_SSL_LIB1 "@SSL_WIN64_DIR@/lib/VC/libeay32MD.lib"
      #define P_SSL_LIB2 "@SSL_WIN64_DIR@/lib/VC/ssleay32MD.lib"
    #endif

  #elif P_SSL_WIN32==2

    #define P_SSL_USE_CONST 1

    #define P_SSL_INCLUDE(inc) include_alias(<inc>, <@SSL_WIN32_DIR@/include/inc>)

    #ifdef _DEBUG
      #define P_SSL_LIB1 "@SSL_WIN32_DIR@/lib/VC/libeay32MTd.lib"
      #define P_SSL_LIB2 "@SSL_WIN32_DIR@/lib/VC/ssleay32MTd.lib"
    #else
      #define P_SSL_LIB1 "@SSL_WIN32_DIR@/lib/VC/libeay32MT.lib"
      #define P_SSL_LIB2 "@SSL_WIN32_DIR@/lib/VC/ssleay32MT.lib"
    #endif

  #else

    #define P_SSL_INCLUDE(inc) include_alias(<inc>, <@SSL_WIN32_DIR@/inc32/inc>)

    #ifdef _DEBUG
      #define P_SSL_LIBDIR "out32.dbg"
    #else
      #define P_SSL_LIBDIR "out32"
    #endif

    #define P_SSL_LIB1 "@SSL_WIN32_DIR@/" P_SSL_LIBDIR "/ssleay32.lib"
    #define P_SSL_LIB2 "@SSL_WIN32_DIR@/" P_SSL_LIBDIR "/libeay32.lib"

  #endif

  #pragma P_SSL_INCLUDE(openssl/ssl.h)
  #pragma P_SSL_INCLUDE(openssl/safestack.h)
  #pragma P_SSL_INCLUDE(openssl/stack.h)
  #pragma P_SSL_INCLUDE(openssl/crypto.h)
  #pragma P_SSL_INCLUDE(openssl/opensslv.h)
  #pragma P_SSL_INCLUDE(openssl/lhash.h)
  #pragma P_SSL_INCLUDE(openssl/buffer.h)
  #pragma P_SSL_INCLUDE(openssl/bio.h)
  #pragma P_SSL_INCLUDE(openssl/pem.h)
  #pragma P_SSL_INCLUDE(openssl/evp.h)
  #pragma P_SSL_INCLUDE(openssl/md2.h)
  #pragma P_SSL_INCLUDE(openssl/opensslconf.h)
  #pragma P_SSL_INCLUDE(openssl/md5.h)
  #pragma P_SSL_INCLUDE(openssl/sha.h)
  #pragma P_SSL_INCLUDE(openssl/ripemd.h)
  #pragma P_SSL_INCLUDE(openssl/des.h)
  #pragma P_SSL_INCLUDE(openssl/e_os2.h)
  #pragma P_SSL_INCLUDE(openssl/rc4.h)
  #pragma P_SSL_INCLUDE(openssl/rc2.h)
  #pragma P_SSL_INCLUDE(openssl/rc5.h)
  #pragma P_SSL_INCLUDE(openssl/blowfish.h)
  #pragma P_SSL_INCLUDE(openssl/cast.h)
  #pragma P_SSL_INCLUDE(openssl/idea.h)
  #pragma P_SSL_INCLUDE(openssl/mdc2.h)
  #pragma P_SSL_INCLUDE(openssl/rsa.h)
  #pragma P_SSL_INCLUDE(openssl/bn.h)
  #pragma P_SSL_INCLUDE(openssl/dsa.h)
  #pragma P_SSL_INCLUDE(openssl/dh.h)
  #pragma P_SSL_INCLUDE(openssl/objects.h)
  #pragma P_SSL_INCLUDE(openssl/asn1.h)
  #pragma P_SSL_INCLUDE(openssl/x509.h)
  #pragma P_SSL_INCLUDE(openssl/x509_vfy.h)
  #pragma P_SSL_INCLUDE(openssl/x509v3.h)
  #pragma P_SSL_INCLUDE(openssl/conf.h)
  #pragma P_SSL_INCLUDE(openssl/pkcs7.h)
  #pragma P_SSL_INCLUDE(openssl/pem2.h)
  #pragma P_SSL_INCLUDE(openssl/ssl2.h)
  #pragma P_SSL_INCLUDE(openssl/ssl3.h)
  #pragma P_SSL_INCLUDE(openssl/tls1.h)
  #pragma P_SSL_INCLUDE(openssl/ssl23.h)
  #pragma P_SSL_INCLUDE(openssl/err.h)
  #pragma P_SSL_INCLUDE(openssl/rand.h)
  #pragma P_SSL_INCLUDE(openssl/symhacks.h)
  #pragma P_SSL_INCLUDE(openssl/comp.h)
  #pragma P_SSL_INCLUDE(openssl/ossl_typ.h)
  #pragma P_SSL_INCLUDE(openssl/md4.h)
  #pragma P_SSL_INCLUDE(openssl/des_old.h)
  #pragma P_SSL_INCLUDE(openssl/ui_compat.h)
  #pragma P_SSL_INCLUDE(openssl/ui.h)
  #pragma P_SSL_INCLUDE(openssl/aes.h)
  #pragma P_SSL_INCLUDE(openssl/obj_mac.h)
  #pragma P_SSL_INCLUDE(openssl/kssl.h)
  #pragma P_SSL_INCLUDE(openssl/ec.h)
  #pragma P_SSL_INCLUDE(openssl/ecdsa.h)
  #pragma P_SSL_INCLUDE(openssl/ecdh.h)
  #pragma P_SSL_INCLUDE(openssl/pq_compat.h)
  #pragma P_SSL_INCLUDE(openssl/dtls1.h)
  #pragma P_SSL_INCLUDE(openssl/pqueue.h)
  #pragma P_SSL_INCLUDE(openssl/hmac.h)
  #pragma P_SSL_INCLUDE(openssl/srtp.h)
  #pragma P_SSL_INCLUDE(openssl/aes.h)

#endif

#undef P_d2i_DHparams_bio_OLD


/////////////////////////////////////////////////
//
// EXPAT library for XML parsing
//

#undef P_EXPAT
#undef P_EXPAT_BUILD
#undef P_EXPAT_WIN32
#undef P_EXPAT_WIN64
#undef P_EXPAT_LIBRARY_W32_DEBUG
#undef P_EXPAT_LIBRARY_W32_RELEASE
#undef P_EXPAT_LIBRARY_WM5_DEBUG
#undef P_EXPAT_LIBRARY_WM5_RELEASE
#undef P_EXPAT_LIBRARY_WM6_DEBUG
#undef P_EXPAT_LIBRARY_WM6_RELEASE
#undef P_EXPAT_LIBRARY_W64_DEBUG
#undef P_EXPAT_LIBRARY_W64_RELEASE

#if (defined(P_EXPAT_WIN64) &&  defined(P_64BIT)                        ) || \
    (defined(P_EXPAT_WIN32) && !defined(P_64BIT) && !defined(_WIN32_WCE)) || \
    (defined(P_EXPAT_WINCE)                      &&  defined(_WIN32_WCE)) || \
    (defined(P_EXPAT_LIBRARY_W64_DEBUG) &&  defined(P_64BIT)) || \
    (defined(P_EXPAT_LIBRARY_W32_DEBUG) && !defined(P_64BIT) && !defined(_WIN32_WCE)) || \
    (defined(P_EXPAT_LIBRARY_WM5_DEBUG)                      &&  defined(_WIN32_WCE)) || \
    (defined(P_EXPAT_LIBRARY_WM6_DEBUG)                      &&  defined(_WIN32_WCE))
  #define P_EXPAT 1
#endif

#if defined(_MSC_VER) && P_EXPAT

  #if P_EXPAT_BUILD
    #pragma include_alias(<expat.h>, <@EXPAT_BUILD_DIR@/lib/expat.h>)
  #else
    #pragma include_alias(<expat.h>, <@EXPAT_WIN32_DIR@/Source/lib/expat.h>)
  #endif

  #if P_64BIT
    #if defined(_DEBUG)
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_W64_DEBUG
    #else
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_W64_RELEASE
    #endif
  #elif defined(P_EXPAT_WIN32)
    #undef P_EXPAT_LIBRARY
  #elif !defined(_WIN32_WCE)
    #if defined(_DEBUG)
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_W32_DEBUG
    #else
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_W32_RELEASE
    #endif
  #elif _WIN32_WCE < 0x502
    #if defined(_DEBUG)
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_WM5_DEBUG
    #else
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_WM5_RELEASE
    #endif
  #else
    #if defined(_DEBUG)
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_WM6_DEBUG
    #else
      #define P_EXPAT_LIBRARY P_EXPAT_LIBRARY_WM6_RELEASE
    #endif
  #endif
#endif

#ifdef P_EXPAT
  #if P_TTS
    #undef P_VXML
  #endif
  #undef P_JABBER
  #undef P_XMLRPC
  #undef P_SOAP
#endif


/////////////////////////////////////////////////
//
// Lua interpreter
//

#undef P_LUA
#undef P_LUA_WIN64
#undef P_LUA_WIN32
#undef P_LUA_WINCE

#if (defined(P_LUA_WIN64) &&  defined(P_64BIT)                        ) || \
    (defined(P_LUA_WIN32) && !defined(P_64BIT) && !defined(_WIN32_WCE)) || \
    (defined(P_LUA_WINCE)                      &&  defined(_WIN32_WCE))
  #define P_LUA 1
#endif

#if defined(_MSC_VER) && defined(P_LUA)
  #pragma include_alias(<lua.hpp>,   <@LUA_DIR@/include/lua.hpp>)
  #pragma include_alias(<lua.h>,     <@LUA_DIR@/include/lua.h>)
  #pragma include_alias(<lauxlib.h>, <@LUA_DIR@/include/lauxlib.h>)
  #pragma include_alias(<lualib.h>,  <@LUA_DIR@/include/lualib.h>)
  
  #define P_LUA_LIBRARY "@LUA_DIR@/lib/lua5.1.lib"
#endif


/////////////////////////////////////////////////
//
// V8 Javascript interpreter
//

#undef P_V8
#undef P_V8_WIN64
#undef P_V8_WIN32

#if (defined(P_V8_WIN64) &&  defined(P_64BIT)) || \
    (defined(P_V8_WIN32) && !defined(P_64BIT))
  #define P_V8 1
#endif

#if defined(_MSC_VER) && defined(P_V8)
  #pragma include_alias(<v8.h>, <@V8_DIR@/include/v8.h>)
  
  #ifdef _DEBUG
    #define P_V8_LIBRARY1 "@V8_DIR@/build/Debug/lib/v8_snapshot.lib"
    #define P_V8_LIBRARY2 "@V8_DIR@/build/Debug/lib/v8_base.lib"
  #else
    #define P_V8_LIBRARY1 "@V8_DIR@/build/Release/lib/v8_snapshot.lib"
    #define P_V8_LIBRARY2 "@V8_DIR@/build/Release/lib/v8_base.lib"
  #endif
#endif


/////////////////////////////////////////////////
//
// Cyrus SASL
//

#undef P_SASL
#undef P_SASL_WIN64
#undef P_SASL_WIN32
#undef P_SASL_WINCE
#undef P_HAS_SASL_SASL_H 

#if (defined(P_SASL_WIN64) &&  defined(P_64BIT)                        ) || \
    (defined(P_SASL_WIN32) && !defined(P_64BIT) && !defined(_WIN32_WCE)) || \
    (defined(P_SASL_WINCE)                      &&  defined(_WIN32_WCE))
  #define P_SASL 1
#endif

#if defined(_MSC_VER) && P_SASL

  #pragma include_alias(<sasl/sasl.h>, <@SASL_DIR@/include/sasl.h>)

  #define P_SASL_LIBRARY "@SASL_DIR@/lib/libsasl.lib"
  #define P_HAS_SASL_SASL_H 1

#endif



/////////////////////////////////////////////////
//
// OpenLDAP
//

#undef P_LDAP
#undef P_LDAP_WIN64
#undef P_LDAP_WIN32
#undef P_LDAP_WINCE

#if (defined(P_LDAP_WIN64) &&  defined(P_64BIT)                        ) || \
    (defined(P_LDAP_WIN32) && !defined(P_64BIT) && !defined(_WIN32_WCE)) || \
    (defined(P_LDAP_WINCE)                      &&  defined(_WIN32_WCE))
  #define P_LDAP 1
#endif

#if defined(_MSC_VER) && P_LDAP

  #pragma include_alias(<ldap.h>,          <@LDAP_DIR@/include/ldap.h>)
  #pragma include_alias(<lber.h>,          <@LDAP_DIR@/include/lber.h>)
  #pragma include_alias(<lber_types.h>,    <@LDAP_DIR@/include/lber_types.h>)
  #pragma include_alias(<ldap_features.h>, <@LDAP_DIR@/include/ldap_features.h>)
  #pragma include_alias(<ldap_cdefs.h>,    <@LDAP_DIR@/include/ldap_cdefs.h>)

  #ifdef _DEBUG
    #define P_LDAP_LIBRARY "@LDAP_DIR@/DLLDebug/openldapd.lib"
  #else
    #define P_LDAP_LIBRARY "@LDAP_DIR@/DLLRelease/openldap.lib"
  #endif

#endif


/////////////////////////////////////////////////
//
// DNS resolver
//

#ifndef _WIN32_WCE
  #undef P_DNS_RESOLVER 
  #undef P_HAS_RES_NINIT
#endif


/////////////////////////////////////////////////
//
// Active Template Library (Windows only)
// There is no actual code support in PTLib for this, but the symbols is required
// for other dependencies
//

#undef P_ATL


/////////////////////////////////////////////////
//
// SAPI speech API (Windows only)
//

#ifndef _WIN32_WCE
  #undef P_SAPI
#endif


/////////////////////////////////////////////////
//
// SDL toolkit
//

#if P_VIDEO
  #undef P_SDL
  #undef P_SDL_WIN64
  #undef P_SDL_WIN32
#endif

#if defined(P_SDL_WIN64) && defined(P_64BIT)
  #define P_SDL P_SDL_WIN64
#elif defined(P_SDL_WIN32) && !defined(P_64BIT)
  #define P_SDL P_SDL_WIN32
#endif

#if defined(_MSC_VER) && P_SDL
  #if P_SDL==1
    #pragma include_alias(<SDL.h>, <@SDL_DIR@/include/SDL.h>)
  #else
    #pragma include_alias(<SDL.h>, <@SDL_DIR@/include/SDL/SDL.h>)
  #endif

  #undef P_SDL_LIBRARY

  #ifndef P_SDL_LIBRARY
    #ifdef _DEBUG
      #define P_SDL_LIBRARY "@SDL_DIR@/VisualC/SDL/Debug/SDL.lib"
    #else
      #define P_SDL_LIBRARY "@SDL_DIR@/VisualC/SDL/Release/SDL.lib"
    #endif
  #endif

#endif



/////////////////////////////////////////////////
//
// APP Share Input 
//

#if P_VIDEO
  #ifndef _WIN32_WCE
    #undef P_APPSHARE
  #endif
#endif



/////////////////////////////////////////////////
//
// DirectSound Support (Windows only)
//

#undef P_DIRECTSOUND_WINCE
#if P_AUDIO && !defined(_WIN32_WCE) && !defined(P_DIRECTSOUND_WINCE) && defined(_MSC_VER)
  #undef P_DIRECTSOUND
  #undef P_DIRECTSOUND_DXERR_H
  #undef P_DIRECTSOUND_LIB
#endif


/////////////////////////////////////////////////
//
// DirectShow Support (Windows only)
//

#if P_VIDEO

  #if defined(_MSC_VER)

    #ifdef _WIN32_WCE

      #undef P_VFW_CAPTURE
      #define P_DIRECTSHOW 1

    #else // _WIN32_WCE

      #define P_VFW_CAPTURE 1
      #undef P_DIRECTSHOW
       #if WINVER < 0x502
          #undef P_DIRECTSHOW_QEDIT_H
       #endif

    #endif // _WIN32_WCE

  #else /* defined(_MSC_VER)*/

    #undef P_DIRECTSHOW
    #undef P_VFW_CAPTURE

  #endif /* defined(_MSC_VER)*/
#endif // P_VIDEO


/////////////////////////////////////////////////
//
// Media library for video conversions.
//

#undef P_MEDIALIB
#undef P_TINY_JPEG


/////////////////////////////////////////////////
//
// COM/DCOM Support (Windows only)
//

#if defined(_WIN32) || (_WIN32_WCE > 0x500)

  #if defined(_WIN32)
    #define _WIN32_DCOM 1
  #endif

  #if defined(_WIN32_WCE) && !defined(_CE_DCOM)
    #ifndef _CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA
      #define _CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA  1
    #endif
  #endif

  #define P_WIN_COM

#endif 


#endif // PTLIB_BUILDOPTS_H


// End Of File ///////////////////////////////////////////////////////////////

